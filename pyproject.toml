[tool.poetry]
name = "spotify_charts_pipeline"
version = "0.1.0"
description = "Get the daily Spotify Charts data history and load to a PostgreSLQ database"
authors = ["Felipe Allegretti"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "~3.9"
requests = "^2.28.1"
python-dotenv = "^0.21.0"
spotipy = "^2.22.0"
pandas = "^1.5.2"
sqlalchemy = "<2.0"
psycopg2-binary = "^2.9.5"
tomli = "^2.0.1"
loguru = "^0.7.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"
coverage = "^7.1.0"
pytest-cov = "^4.0.0"
ruff = "^0.0.262"

[tool.ruff]
line-length = 120
select = [
    "F",  # pyflakes
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "I",  # isort
    "COM",  # flake8-commas
    "Q",  # flake8-quotes
    "PL",  # pylint
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--verbose --exitfirst"
testpaths = ["tests"]

[tool.coverage.run]
command_line = '--module pytest --exitfirst -v tests'
omit = ["tests/*"]

[tool.logging]
version = 1

[tool.logging.loggers.root]
level = "INFO"
handlers = ['stream_handler']

[tool.logging.handlers.stream_handler]
class = "logging.StreamHandler"
formatter = "formatter"
level = "INFO"
stream = "ext://sys.stdout"

[tool.logging.formatters.formatter]
format = "%(asctime)s %(levelname)s - %(message)s"
datefmt = "%d/%m/%Y %H:%M:%S"